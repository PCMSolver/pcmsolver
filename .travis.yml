language: cpp
sudo: false
dist: trusty
ruby: 2.2.0
notifications:
  slack:
    secure: F2nQIW6SiaGdw1LjuZOlgBu8rUVMllrDG/5bhmTQP7gyETfViFBjTsHQdTle6jtdb+LudleZaG7WhdEiVcKUa834rKqDk1UOt9p6bsmgbsBZBAaxmPh01iVFhKn3ML7JLjfr1YtH7MWJcsS60cNBrohXfVKfFzNgDqZEu/llr90=
cache:
  bundler: true
  ccache: true
  pip: true
env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1
branches:
  except:
    - fix-appveyor
matrix:
  include:
    - os: linux
      addons: &1
        apt:
          packages:
            - cmake3
            - cmake3-data
            - g++-4.6
            - gcc-4.6
            - gfortran-4.6
            - libboost-math-dev
      env:
        - CXX_COMPILER='g++-4.6'
        - C_COMPILER='gcc-4.6'
        - Fortran_COMPILER='gfortran-4.6'
        - BUILD_TYPE='release'
        - PYTHON='python2'
        - RUN_DANGER=false
    - os: linux
      addons:
        apt:
          packages:
            - cmake3
            - cmake3-data
            - clang
            - clang-format-3.9
            - gfortran-4.6
            - libboost-math-dev
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran-4.6'
        - BUILD_TYPE='release'
        - PYTHON='python3'
        - STATIC='--static'
        - RUN_DANGER=true

    - os: osx
      osx_image: xcode8
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran-5'
        - BUILD_TYPE='release'
        - PYTHON='python2'
        - HOMEBREW_GCC='gcc@5'
        - STATIC='--static'
        - RUN_DANGER=false
    - os: osx
      osx_image: xcode8
      env:
        - CXX_COMPILER='g++-7'
        - C_COMPILER='gcc-7'
        - Fortran_COMPILER='gfortran-7'
        - BUILD_TYPE='release'
        - PYTHON='python3'
        - HOMEBREW_GCC='gcc@7'
        - RUN_DANGER=false

    - os: linux
      addons: *1
      env:
        - CXX_COMPILER='g++-4.6'
        - C_COMPILER='gcc-4.6'
        - Fortran_COMPILER='gfortran-4.6'
        - BUILD_TYPE='debug'
        - PYTHON='python2'
        - COVERAGE='--coverage'
        - RUN_DANGER=false
  allow_failures:
    - os: linux
      addons: *1
      env:
        - CXX_COMPILER='g++-4.6'
        - C_COMPILER='gcc-4.6'
        - Fortran_COMPILER='gfortran-4.6'
        - BUILD_TYPE='debug'
        - PYTHON='python2'
        - COVERAGE='--coverage'
        - RUN_DANGER=false
before_install:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC
install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      brew install ${HOMEBREW_GCC} ${PYTHON} boost ccache cmake zlib
      pip install virtualenv --upgrade
      export PATH="/usr/local/opt/ccache/libexec:$PATH"
    else
      pip install --user virtualenv --upgrade
    fi
  - virtualenv --python=${PYTHON} venv
  - source venv/bin/activate
  - pip install -r requirements.txt
before_script:
  - ./.ci/report_versions.sh
  - cd ${TRAVIS_BUILD_DIR}
  - echo 'Build set up summary'
  - |
    if [[ "${RUN_DANGER}" = true ]]; then
      bundle install --gemfile=.ci/Gemfile
    fi
script:
  - |
    if [[ "${RUN_DANGER}" = true ]]; then
      BUNDLE_GEMFILE=.ci/Gemfile bundle exec danger --dangerfile=.ci/Dangerfile
    fi
  - python setup.py --cxx=${CXX_COMPILER} --cc=${C_COMPILER} --fc=${Fortran_COMPILER} --type=${BUILD_TYPE} ${STATIC} ${COVERAGE}
  - cd build
  - ../.ci/ci_build.sh
  - python ../.ci/ci_test.py ctest --output-on-failure --verbose
  - python ../.ci/ci_print_failing.py
after_success:
  - |
    if [[ "${COVERAGE}" = true ]]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*generated.*" -E ".*tests*" -E ".*tools.*" -E ".*cmake*" -E ".*doc*" -E ".*examples*" || echo 'coveralls upload failed.'
    fi
