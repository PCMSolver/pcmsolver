/** \page GeneralStructure General Structure

\image html structure.png 

- \subpage CodeStats

External libraries:
+ parts of the C++ [Boost](http://www.boost.org/) libraries are used to provide various functionality, 
like interaction with the filesystem and metaprogramming. 
The source for the 1.55.0 release is shipped with the module's source code. Some of the libraries used,
filesystem, system and unit_test_framework, need to be compiled. Boost is released under the terms of the
Boost Software License, v1.0 available [here](http://opensource.org/licenses/BSL-1.0) (see also [here](http://www.boost.org/users/license.html))
We encourage the use of Boost whenever some functionality has already been coded within those libraries.
+ the [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page) template library for linear algebra.
Almost every operation involving matrices and vectors is performed through Eigen.
Eigen provides convenient type definitions for vectors and matrices (of arbitrary dimensions) and the
corresponding operations. Have a look [here](http://eigen.tuxfamily.org/dox/group__QuickRefPage.html) for a quick
reference guide to the API and [here](http://eigen.tuxfamily.org/dox/GettingStarted.html) to get started.
Eigen is distributed under the terms of the Mozilla Public License, v2.0 available [here](http://opensource.org/licenses/MPL-2.0)
+ the [Getkw](https://repo.ctcc.no/projects/libgetkw/wiki) by Jonas Juselius is used to manage input.
It is distributed under the terms of the GNU General Public License, v2.0 available [here](http://opensource.org/licenses/GPL-2.0).
+ the [libtaylor](https://code.google.com/p/libtaylor/) library implementing automatic differentiation and available
under the terms of the GNU Lesser General Public License, v3.0 available [here](http://opensource.org/licenses/LGPL-3.0).

Third-party code snippets:
+ Fortran subroutines `dsyevv3`, `dsyevh3`, `dsyevj3` for the diagonalization of 3x3 Hermitian matrices.
These subroutines were copied verbatim from the source code provided [here](http://www.mpi-hd.mpg.de/personalhomes/globes/3x3/)
by Joachim Kopp and described in \cite KOPP2008 (also available at [arXiv](http://arxiv.org/abs/physics/0610206))
The diagonalization subroutines are made available under the terms of the GNU Lesser General Public License, v2.1
The LGPL v2.1 text is available [here](http://opensource.org/licenses/LGPL-2.1)
+ C++ cnpy library for saving arrays in C++ into Numpy arrays. The library is from Carl Rogers and is made available 
[here](https://github.com/rogersce/cnpy) under the terms of the MIT License. The version in `%PCMSolver` is slightly different.
The MIT License text is available [here](http://opensource.org/licenses/mit-license.php) 

*/
