import os
import matplotlib as mpl
# Force matplotlib to not use any Xwindows backend.
mpl.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.font_manager import FontProperties

# Handle to font properties
font = FontProperties()

# Font properties for x-ticks labels
labels_font = font.copy()
labels_font.set_weight('bold')
labels_font.set_size('medium')

save_root = '{svg_dir}'
tag = '{tag}'
nr_blanks = {data[nr_blanks]:d}
nr_comments = {data[nr_comments]:d}
nr_files = {data[nr_files]:d}
nr_cpp_code = {data[nr_cpp_code]:d}
nr_c_code = {data[nr_c_code]:d}
nr_fortran_code = {data[nr_fortran_code]:d}
nr_python_code = {data[nr_python_code]:d}

# Logic to get the programming language
# **Warning**
# This is only valid because we don't mix languages
# within any one folder
if nr_cpp_code:
   language = 'C++'
   nr_code = nr_cpp_code
elif nr_c_code:
   language = 'C'
   nr_code = nr_c_code
elif nr_fortran_code:
   language = 'Fortran 90'
   nr_code = nr_fortran_code
else:
   language = 'Python'
   nr_code = nr_python_code

annotation = {annotation}

# Set properties of bar chart
N = 3
data = (nr_blanks, nr_comments, nr_code)
ind = np.arange(N)
width = 1.0
my_colors = 'gcy'

fig, ax = plt.subplots()
# Remove frame and adjust x-ticks and respective labels
fig.set_facecolor('white')
ax.set_frame_on(False)
ax.get_xaxis().tick_bottom()
ax.get_xaxis().set_tick_params(bottom = 'off')
ax.spines['right'].set_color('none')
ax.spines['left'].set_color('none')
ax.set_yticks([])
for label in ax.get_xticklabels() :
        label.set_fontproperties(labels_font)

# Plot the data
rects = ax.bar(ind, data, width, color = my_colors, edgecolor = 'white', alpha = 0.5)
ax.set_xticks(ind)
ax.set_xticklabels(('# Blank', '# Comment', '# Code'))

def autolabel(ax, font, rects):
    # attach some text labels on top of the bars
    bar_font = font.copy()
    bar_font.set_weight('bold')
    bar_font.set_size('large')
    for rect in rects:
        height = rect.get_height()
        ax.text(rect.get_x()+rect.get_width()/2., height, '%d'%int(height),
                ha='center', va='bottom', fontproperties = bar_font)

autolabel(ax, font, rects)

# Create box with library name and language
box_font = font.copy()
box_font.set_size('large')
box_font.set_weight('bold')
props = dict(boxstyle = 'round', facecolor = 'wheat', edgecolor = 'black', alpha = 0.5, linewidth = 1.5)
fig.text(0.15, 0.75, annotation,
        style = 'normal',
        fontsize = 12,
        bbox = props, fontproperties = box_font)

# Save to file
fig.savefig(os.path.join(save_root, tag + '.svg'), format = 'svg', dpi = 200, bbox_inches = 'tight')
